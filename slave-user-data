#cloud-config

---
write_files:
- path: "/etc/resolv.conf.skydns"
  permissions: '0644'
  owner: root
  content: |
    domain skdemo.cloud
    search skdemo.cloud internal.skdemo.cloud
    nameserver $public_ipv4
    nameserver 8.8.8.8
    nameserver 8.8.4.4
- path: "/tools/set_skydns_resolvconf.sh"
  permissions: '0544'
  owner: root
  content: |
    #!/bin/bash
    CONTAINER=$1
    IP=$(docker inspect -f '{{.NetworkSettings.IPAddress}}' ${CONTAINER})
    while [ -z "${IP// }" ]; do
      sleep 1;
      echo "Wait IP of skydns container"
      IP=$(docker inspect -f '{{.NetworkSettings.IPAddress}}' ${CONTAINER})
    done
    echo "Update /etc/resolv.conf.skydns with IP ${IP}"
    /bin/sed -i "/search/a nameserver ${IP}" /etc/resolv.conf.skydns
- path: "/tools/unset_skydns_resolvconf.sh"
  permissions: '0500'
  owner: root
  content: |
    #!/bin/bash
    IP=$(docker inspect -f '{{.NetworkSettings.IPAddress}}' skydns)
    echo "Remove IP ${IP} from /etc/resolv.conf.skydns"
    /bin/sed -i "/nameserver ${IP}/d" /etc/resolv.conf.skydns
- path: "/etc/skydns.environment"
  permissions: '0644'
  owner: root
  content: |
    DOMAIN=skdemo.cloud
    DOMAIN_PATH=/skydns/cloud/skdemo
    SKYDNS_CONFIG='{"domain":"skdemo.cloud", "dns_addr":"0.0.0.0:53", "ttl":60, "nameservers": ["8.8.8.8:53","8.8.4.4:53"]}'
- path: "/etc/profile.d/alias.sh"
  permissions: '0644'
  owner: root
  content: |
    alias lal="ls -al"
    alias ll="ls -l"
    alias dk="docker "
    alias dkps="dk ps"
    alias dkm="dk images"
    alias dki="dk inspect"
    function dkip() { docker inspect --format "{{ .NetworkSettings.IPAddress }}" $1 ; }
    function dkid() { docker inspect --format "{{ .ID }}" $1 ; }
    function dkim() { docker inspect --format "{{ .Image }}" $1 ; }
    function dkst() { docker inspect --format "{{ .State.Running }}" $1 ; }
    function dkit() { docker exec -it $1 bash ; }
coreos:
  etcd2:
    discovery: https://discovery.etcd.io/ce9eb27556c9bc63fda7d66db46f42cb
    advertise-client-urls: http://$private_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380
  fleet:
    public-ip: "$public_ipv4"
    metadata: role=mesos-slave
  flannel:
    interface: "$public_ipv4"
  units:
  - name: etcd2.service
    command: start
  - name: fleet.service
    command: start
  - name: flanneld.service
    drop-ins:
    - name: 50-network-config.conf
      content: |
        [Service]
        ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.99.0.0/16" }'
    command: start
  - name: docker.service
    drop-ins:
    - name: 50-flannel.conf
      content: |
        [Unit]
        Requires=flanneld.service
        After=flanneld.service
    command: start
